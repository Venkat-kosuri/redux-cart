{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initialState = {\n  todos: []\n};\n\nconst todosReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case \"REMOVE_TODO\":\n      return { ...state,\n        todos: [...state.todos.slice(0, action.payload), ...state.todos.slice(action.payload + 1)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst loggerMiddleware = () => next => action => {\n  next(action);\n  console.log(action);\n};\n\nconst middlewares = [loggerMiddleware];\nconst store = createStore(todosReducer, composeWithDevTools, applyMiddleware(...middlewares));\nexport default store;","map":{"version":3,"sources":["C:/redux/todo-app/src/state/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","initialState","todos","todosReducer","state","action","type","payload","slice","loggerMiddleware","next","console","log","middlewares","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,YAAY,GAAE,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACE,OAAxB;AAFF,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KAAN,CAAYM,KAAZ,CAAkB,CAAlB,EAAqBH,MAAM,CAACE,OAA5B,CADE,EAEL,GAAGH,KAAK,CAACF,KAAN,CAAYM,KAAZ,CAAkBH,MAAM,CAACE,OAAP,GAAiB,CAAnC,CAFE;AAFF,OAAP;;AAOF;AACE,aAAOH,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,MAAMK,gBAAgB,GAAG,MAAMC,IAAI,IAAIL,MAAM,IAAI;AAC/CK,EAAAA,IAAI,CAACL,MAAD,CAAJ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,CAHD;;AAKA,MAAMQ,WAAW,GAAG,CAACJ,gBAAD,CAApB;AAEA,MAAMK,KAAK,GAAGhB,WAAW,CAACK,YAAD,EAAcH,mBAAd,EAAmCD,eAAe,CAAC,GAAGc,WAAJ,CAAlD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension'; \r\nconst initialState = {\r\n  todos: []\r\n};\r\n\r\nconst todosReducer =(state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload]\r\n      };\r\n    case \"REMOVE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(0, action.payload),\r\n          ...state.todos.slice(action.payload + 1)\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst loggerMiddleware = () => next => action => {\r\n  next(action);\r\n  console.log(action);\r\n};\r\n\r\nconst middlewares = [loggerMiddleware];\r\n\r\nconst store = createStore(todosReducer,composeWithDevTools, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}